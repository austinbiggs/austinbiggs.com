/* eslint-disable */
// @generated by graphql-codegen
// This file was automatically generated and should not be edited.
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> &
  { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> &
  { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  json: any;
  numeric: any;
  timestamptz: any;
};

export type Activity_Logins = {
  __typename?: "activity_logins";
  id: Scalars["Int"];
  ip_address: Scalars["String"];
  timestamp: Scalars["timestamptz"];
  user: Users;
  user_id: Scalars["Int"];
};

export type Activity_Logins_Aggregate = {
  __typename?: "activity_logins_aggregate";
  aggregate?: Maybe<Activity_Logins_Aggregate_Fields>;
  nodes: Array<Activity_Logins>;
};

export type Activity_Logins_Aggregate_Fields = {
  __typename?: "activity_logins_aggregate_fields";
  avg?: Maybe<Activity_Logins_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Activity_Logins_Max_Fields>;
  min?: Maybe<Activity_Logins_Min_Fields>;
  stddev?: Maybe<Activity_Logins_Stddev_Fields>;
  stddev_pop?: Maybe<Activity_Logins_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Activity_Logins_Stddev_Samp_Fields>;
  sum?: Maybe<Activity_Logins_Sum_Fields>;
  var_pop?: Maybe<Activity_Logins_Var_Pop_Fields>;
  var_samp?: Maybe<Activity_Logins_Var_Samp_Fields>;
  variance?: Maybe<Activity_Logins_Variance_Fields>;
};

export type Activity_Logins_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Activity_Logins_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Activity_Logins_Aggregate_Order_By = {
  avg?: Maybe<Activity_Logins_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Activity_Logins_Max_Order_By>;
  min?: Maybe<Activity_Logins_Min_Order_By>;
  stddev?: Maybe<Activity_Logins_Stddev_Order_By>;
  stddev_pop?: Maybe<Activity_Logins_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Activity_Logins_Stddev_Samp_Order_By>;
  sum?: Maybe<Activity_Logins_Sum_Order_By>;
  var_pop?: Maybe<Activity_Logins_Var_Pop_Order_By>;
  var_samp?: Maybe<Activity_Logins_Var_Samp_Order_By>;
  variance?: Maybe<Activity_Logins_Variance_Order_By>;
};

export type Activity_Logins_Arr_Rel_Insert_Input = {
  data: Array<Activity_Logins_Insert_Input>;
  on_conflict?: Maybe<Activity_Logins_On_Conflict>;
};

export type Activity_Logins_Avg_Fields = {
  __typename?: "activity_logins_avg_fields";
  id?: Maybe<Scalars["Float"]>;
  user_id?: Maybe<Scalars["Float"]>;
};

export type Activity_Logins_Avg_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Bool_Exp = {
  _and?: Maybe<Array<Activity_Logins_Bool_Exp>>;
  _not?: Maybe<Activity_Logins_Bool_Exp>;
  _or?: Maybe<Array<Activity_Logins_Bool_Exp>>;
  id?: Maybe<Int_Comparison_Exp>;
  ip_address?: Maybe<String_Comparison_Exp>;
  timestamp?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  user_id?: Maybe<Int_Comparison_Exp>;
};

export enum Activity_Logins_Constraint {
  ActivityLoginsIdKey = "activity_logins_id_key",
  ActivityLoginsPkey = "activity_logins_pkey",
  ActivityLoginsUserIdTimestampKey = "activity_logins_user_id_timestamp_key",
}

export type Activity_Logins_Inc_Input = {
  id?: Maybe<Scalars["Int"]>;
  user_id?: Maybe<Scalars["Int"]>;
};

export type Activity_Logins_Insert_Input = {
  id?: Maybe<Scalars["Int"]>;
  ip_address?: Maybe<Scalars["String"]>;
  timestamp?: Maybe<Scalars["timestamptz"]>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars["Int"]>;
};

export type Activity_Logins_Max_Fields = {
  __typename?: "activity_logins_max_fields";
  id?: Maybe<Scalars["Int"]>;
  ip_address?: Maybe<Scalars["String"]>;
  timestamp?: Maybe<Scalars["timestamptz"]>;
  user_id?: Maybe<Scalars["Int"]>;
};

export type Activity_Logins_Max_Order_By = {
  id?: Maybe<Order_By>;
  ip_address?: Maybe<Order_By>;
  timestamp?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Min_Fields = {
  __typename?: "activity_logins_min_fields";
  id?: Maybe<Scalars["Int"]>;
  ip_address?: Maybe<Scalars["String"]>;
  timestamp?: Maybe<Scalars["timestamptz"]>;
  user_id?: Maybe<Scalars["Int"]>;
};

export type Activity_Logins_Min_Order_By = {
  id?: Maybe<Order_By>;
  ip_address?: Maybe<Order_By>;
  timestamp?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Mutation_Response = {
  __typename?: "activity_logins_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Activity_Logins>;
};

export type Activity_Logins_On_Conflict = {
  constraint: Activity_Logins_Constraint;
  update_columns?: Array<Activity_Logins_Update_Column>;
  where?: Maybe<Activity_Logins_Bool_Exp>;
};

export type Activity_Logins_Order_By = {
  id?: Maybe<Order_By>;
  ip_address?: Maybe<Order_By>;
  timestamp?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Activity_Logins_Select_Column {
  Id = "id",
  IpAddress = "ip_address",
  Timestamp = "timestamp",
  UserId = "user_id",
}

export type Activity_Logins_Set_Input = {
  id?: Maybe<Scalars["Int"]>;
  ip_address?: Maybe<Scalars["String"]>;
  timestamp?: Maybe<Scalars["timestamptz"]>;
  user_id?: Maybe<Scalars["Int"]>;
};

export type Activity_Logins_Stddev_Fields = {
  __typename?: "activity_logins_stddev_fields";
  id?: Maybe<Scalars["Float"]>;
  user_id?: Maybe<Scalars["Float"]>;
};

export type Activity_Logins_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Stddev_Pop_Fields = {
  __typename?: "activity_logins_stddev_pop_fields";
  id?: Maybe<Scalars["Float"]>;
  user_id?: Maybe<Scalars["Float"]>;
};

export type Activity_Logins_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Stddev_Samp_Fields = {
  __typename?: "activity_logins_stddev_samp_fields";
  id?: Maybe<Scalars["Float"]>;
  user_id?: Maybe<Scalars["Float"]>;
};

export type Activity_Logins_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Sum_Fields = {
  __typename?: "activity_logins_sum_fields";
  id?: Maybe<Scalars["Int"]>;
  user_id?: Maybe<Scalars["Int"]>;
};

export type Activity_Logins_Sum_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export enum Activity_Logins_Update_Column {
  Id = "id",
  IpAddress = "ip_address",
  Timestamp = "timestamp",
  UserId = "user_id",
}

export type Activity_Logins_Var_Pop_Fields = {
  __typename?: "activity_logins_var_pop_fields";
  id?: Maybe<Scalars["Float"]>;
  user_id?: Maybe<Scalars["Float"]>;
};

export type Activity_Logins_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Var_Samp_Fields = {
  __typename?: "activity_logins_var_samp_fields";
  id?: Maybe<Scalars["Float"]>;
  user_id?: Maybe<Scalars["Float"]>;
};

export type Activity_Logins_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Activity_Logins_Variance_Fields = {
  __typename?: "activity_logins_variance_fields";
  id?: Maybe<Scalars["Float"]>;
  user_id?: Maybe<Scalars["Float"]>;
};

export type Activity_Logins_Variance_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Auth0Input = {
  email: Scalars["String"];
  emailVerified: Scalars["String"];
  name: Scalars["String"];
  phone: Scalars["String"];
  phoneVerified: Scalars["String"];
  picture: Scalars["String"];
  username: Scalars["String"];
};

export type Auth0Output = {
  __typename?: "Auth0Output";
  accessToken: Scalars["String"];
};

export type Boolean_Comparison_Exp = {
  _eq?: Maybe<Scalars["Boolean"]>;
  _gt?: Maybe<Scalars["Boolean"]>;
  _gte?: Maybe<Scalars["Boolean"]>;
  _in?: Maybe<Array<Scalars["Boolean"]>>;
  _is_null?: Maybe<Scalars["Boolean"]>;
  _lt?: Maybe<Scalars["Boolean"]>;
  _lte?: Maybe<Scalars["Boolean"]>;
  _neq?: Maybe<Scalars["Boolean"]>;
  _nin?: Maybe<Array<Scalars["Boolean"]>>;
};

export type Courses = {
  __typename?: "courses";
  content: Scalars["String"];
  created_at: Scalars["timestamptz"];
  created_by_id: Scalars["Int"];
  id: Scalars["Int"];
  premium: Scalars["Boolean"];
  price: Scalars["numeric"];
  sku: Scalars["String"];
  slug: Scalars["String"];
  status: Scalars["String"];
  summary: Scalars["String"];
  title: Scalars["String"];
  updated_at: Scalars["timestamptz"];
  updated_by_id: Scalars["Int"];
  user: Users;
  userByCreatedById: Users;
};

export type Courses_Aggregate = {
  __typename?: "courses_aggregate";
  aggregate?: Maybe<Courses_Aggregate_Fields>;
  nodes: Array<Courses>;
};

export type Courses_Aggregate_Fields = {
  __typename?: "courses_aggregate_fields";
  avg?: Maybe<Courses_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Courses_Max_Fields>;
  min?: Maybe<Courses_Min_Fields>;
  stddev?: Maybe<Courses_Stddev_Fields>;
  stddev_pop?: Maybe<Courses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Courses_Stddev_Samp_Fields>;
  sum?: Maybe<Courses_Sum_Fields>;
  var_pop?: Maybe<Courses_Var_Pop_Fields>;
  var_samp?: Maybe<Courses_Var_Samp_Fields>;
  variance?: Maybe<Courses_Variance_Fields>;
};

export type Courses_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Courses_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Courses_Aggregate_Order_By = {
  avg?: Maybe<Courses_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Courses_Max_Order_By>;
  min?: Maybe<Courses_Min_Order_By>;
  stddev?: Maybe<Courses_Stddev_Order_By>;
  stddev_pop?: Maybe<Courses_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Courses_Stddev_Samp_Order_By>;
  sum?: Maybe<Courses_Sum_Order_By>;
  var_pop?: Maybe<Courses_Var_Pop_Order_By>;
  var_samp?: Maybe<Courses_Var_Samp_Order_By>;
  variance?: Maybe<Courses_Variance_Order_By>;
};

export type Courses_Arr_Rel_Insert_Input = {
  data: Array<Courses_Insert_Input>;
  on_conflict?: Maybe<Courses_On_Conflict>;
};

export type Courses_Avg_Fields = {
  __typename?: "courses_avg_fields";
  created_by_id?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  price?: Maybe<Scalars["Float"]>;
  updated_by_id?: Maybe<Scalars["Float"]>;
};

export type Courses_Avg_Order_By = {
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Courses_Bool_Exp = {
  _and?: Maybe<Array<Courses_Bool_Exp>>;
  _not?: Maybe<Courses_Bool_Exp>;
  _or?: Maybe<Array<Courses_Bool_Exp>>;
  content?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  created_by_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  premium?: Maybe<Boolean_Comparison_Exp>;
  price?: Maybe<Numeric_Comparison_Exp>;
  sku?: Maybe<String_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  summary?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  updated_by_id?: Maybe<Int_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  userByCreatedById?: Maybe<Users_Bool_Exp>;
};

export enum Courses_Constraint {
  CoursesPkey = "courses_pkey",
  CoursesSkuKey = "courses_sku_key",
  CoursesSlugKey = "courses_slug_key",
  CoursesTitleKey = "courses_title_key",
}

export type Courses_Inc_Input = {
  created_by_id?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  price?: Maybe<Scalars["numeric"]>;
  updated_by_id?: Maybe<Scalars["Int"]>;
};

export type Courses_Insert_Input = {
  content?: Maybe<Scalars["String"]>;
  created_at?: Maybe<Scalars["timestamptz"]>;
  created_by_id?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  premium?: Maybe<Scalars["Boolean"]>;
  price?: Maybe<Scalars["numeric"]>;
  sku?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  summary?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updated_at?: Maybe<Scalars["timestamptz"]>;
  updated_by_id?: Maybe<Scalars["Int"]>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  userByCreatedById?: Maybe<Users_Obj_Rel_Insert_Input>;
};

export type Courses_Max_Fields = {
  __typename?: "courses_max_fields";
  content?: Maybe<Scalars["String"]>;
  created_at?: Maybe<Scalars["timestamptz"]>;
  created_by_id?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  price?: Maybe<Scalars["numeric"]>;
  sku?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  summary?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updated_at?: Maybe<Scalars["timestamptz"]>;
  updated_by_id?: Maybe<Scalars["Int"]>;
};

export type Courses_Max_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  sku?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  summary?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Courses_Min_Fields = {
  __typename?: "courses_min_fields";
  content?: Maybe<Scalars["String"]>;
  created_at?: Maybe<Scalars["timestamptz"]>;
  created_by_id?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  price?: Maybe<Scalars["numeric"]>;
  sku?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  summary?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updated_at?: Maybe<Scalars["timestamptz"]>;
  updated_by_id?: Maybe<Scalars["Int"]>;
};

export type Courses_Min_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  sku?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  summary?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Courses_Mutation_Response = {
  __typename?: "courses_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Courses>;
};

export type Courses_On_Conflict = {
  constraint: Courses_Constraint;
  update_columns?: Array<Courses_Update_Column>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type Courses_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  premium?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  sku?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  summary?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  userByCreatedById?: Maybe<Users_Order_By>;
};

export type Courses_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Courses_Select_Column {
  Content = "content",
  CreatedAt = "created_at",
  CreatedById = "created_by_id",
  Id = "id",
  Premium = "premium",
  Price = "price",
  Sku = "sku",
  Slug = "slug",
  Status = "status",
  Summary = "summary",
  Title = "title",
  UpdatedAt = "updated_at",
  UpdatedById = "updated_by_id",
}

export type Courses_Set_Input = {
  content?: Maybe<Scalars["String"]>;
  created_at?: Maybe<Scalars["timestamptz"]>;
  created_by_id?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  premium?: Maybe<Scalars["Boolean"]>;
  price?: Maybe<Scalars["numeric"]>;
  sku?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  summary?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updated_at?: Maybe<Scalars["timestamptz"]>;
  updated_by_id?: Maybe<Scalars["Int"]>;
};

export type Courses_Stddev_Fields = {
  __typename?: "courses_stddev_fields";
  created_by_id?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  price?: Maybe<Scalars["Float"]>;
  updated_by_id?: Maybe<Scalars["Float"]>;
};

export type Courses_Stddev_Order_By = {
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Courses_Stddev_Pop_Fields = {
  __typename?: "courses_stddev_pop_fields";
  created_by_id?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  price?: Maybe<Scalars["Float"]>;
  updated_by_id?: Maybe<Scalars["Float"]>;
};

export type Courses_Stddev_Pop_Order_By = {
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Courses_Stddev_Samp_Fields = {
  __typename?: "courses_stddev_samp_fields";
  created_by_id?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  price?: Maybe<Scalars["Float"]>;
  updated_by_id?: Maybe<Scalars["Float"]>;
};

export type Courses_Stddev_Samp_Order_By = {
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Courses_Sum_Fields = {
  __typename?: "courses_sum_fields";
  created_by_id?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  price?: Maybe<Scalars["numeric"]>;
  updated_by_id?: Maybe<Scalars["Int"]>;
};

export type Courses_Sum_Order_By = {
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export enum Courses_Update_Column {
  Content = "content",
  CreatedAt = "created_at",
  CreatedById = "created_by_id",
  Id = "id",
  Premium = "premium",
  Price = "price",
  Sku = "sku",
  Slug = "slug",
  Status = "status",
  Summary = "summary",
  Title = "title",
  UpdatedAt = "updated_at",
  UpdatedById = "updated_by_id",
}

export type Courses_Var_Pop_Fields = {
  __typename?: "courses_var_pop_fields";
  created_by_id?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  price?: Maybe<Scalars["Float"]>;
  updated_by_id?: Maybe<Scalars["Float"]>;
};

export type Courses_Var_Pop_Order_By = {
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Courses_Var_Samp_Fields = {
  __typename?: "courses_var_samp_fields";
  created_by_id?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  price?: Maybe<Scalars["Float"]>;
  updated_by_id?: Maybe<Scalars["Float"]>;
};

export type Courses_Var_Samp_Order_By = {
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Courses_Variance_Fields = {
  __typename?: "courses_variance_fields";
  created_by_id?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  price?: Maybe<Scalars["Float"]>;
  updated_by_id?: Maybe<Scalars["Float"]>;
};

export type Courses_Variance_Order_By = {
  created_by_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_by_id?: Maybe<Order_By>;
};

export type Int_Comparison_Exp = {
  _eq?: Maybe<Scalars["Int"]>;
  _gt?: Maybe<Scalars["Int"]>;
  _gte?: Maybe<Scalars["Int"]>;
  _in?: Maybe<Array<Scalars["Int"]>>;
  _is_null?: Maybe<Scalars["Boolean"]>;
  _lt?: Maybe<Scalars["Int"]>;
  _lte?: Maybe<Scalars["Int"]>;
  _neq?: Maybe<Scalars["Int"]>;
  _nin?: Maybe<Array<Scalars["Int"]>>;
};

export type Json_Comparison_Exp = {
  _eq?: Maybe<Scalars["json"]>;
  _gt?: Maybe<Scalars["json"]>;
  _gte?: Maybe<Scalars["json"]>;
  _in?: Maybe<Array<Scalars["json"]>>;
  _is_null?: Maybe<Scalars["Boolean"]>;
  _lt?: Maybe<Scalars["json"]>;
  _lte?: Maybe<Scalars["json"]>;
  _neq?: Maybe<Scalars["json"]>;
  _nin?: Maybe<Array<Scalars["json"]>>;
};

export type Mutation_Root = {
  __typename?: "mutation_root";
  createAuth0User?: Maybe<Auth0Output>;
  delete_activity_logins?: Maybe<Activity_Logins_Mutation_Response>;
  delete_activity_logins_by_pk?: Maybe<Activity_Logins>;
  delete_courses?: Maybe<Courses_Mutation_Response>;
  delete_courses_by_pk?: Maybe<Courses>;
  delete_pages?: Maybe<Pages_Mutation_Response>;
  delete_pages_by_pk?: Maybe<Pages>;
  delete_posts?: Maybe<Posts_Mutation_Response>;
  delete_posts_by_pk?: Maybe<Posts>;
  delete_profiles?: Maybe<Profiles_Mutation_Response>;
  delete_profiles_by_pk?: Maybe<Profiles>;
  delete_roles?: Maybe<Roles_Mutation_Response>;
  delete_roles_by_pk?: Maybe<Roles>;
  delete_tags?: Maybe<Tags_Mutation_Response>;
  delete_tags_by_pk?: Maybe<Tags>;
  delete_topics?: Maybe<Topics_Mutation_Response>;
  delete_topics_by_pk?: Maybe<Topics>;
  delete_users?: Maybe<Users_Mutation_Response>;
  delete_users_by_pk?: Maybe<Users>;
  insert_activity_logins?: Maybe<Activity_Logins_Mutation_Response>;
  insert_activity_logins_one?: Maybe<Activity_Logins>;
  insert_courses?: Maybe<Courses_Mutation_Response>;
  insert_courses_one?: Maybe<Courses>;
  insert_pages?: Maybe<Pages_Mutation_Response>;
  insert_pages_one?: Maybe<Pages>;
  insert_posts?: Maybe<Posts_Mutation_Response>;
  insert_posts_one?: Maybe<Posts>;
  insert_profiles?: Maybe<Profiles_Mutation_Response>;
  insert_profiles_one?: Maybe<Profiles>;
  insert_roles?: Maybe<Roles_Mutation_Response>;
  insert_roles_one?: Maybe<Roles>;
  insert_tags?: Maybe<Tags_Mutation_Response>;
  insert_tags_one?: Maybe<Tags>;
  insert_topics?: Maybe<Topics_Mutation_Response>;
  insert_topics_one?: Maybe<Topics>;
  insert_users?: Maybe<Users_Mutation_Response>;
  insert_users_one?: Maybe<Users>;
  update_activity_logins?: Maybe<Activity_Logins_Mutation_Response>;
  update_activity_logins_by_pk?: Maybe<Activity_Logins>;
  update_courses?: Maybe<Courses_Mutation_Response>;
  update_courses_by_pk?: Maybe<Courses>;
  update_pages?: Maybe<Pages_Mutation_Response>;
  update_pages_by_pk?: Maybe<Pages>;
  update_posts?: Maybe<Posts_Mutation_Response>;
  update_posts_by_pk?: Maybe<Posts>;
  update_profiles?: Maybe<Profiles_Mutation_Response>;
  update_profiles_by_pk?: Maybe<Profiles>;
  update_roles?: Maybe<Roles_Mutation_Response>;
  update_roles_by_pk?: Maybe<Roles>;
  update_tags?: Maybe<Tags_Mutation_Response>;
  update_tags_by_pk?: Maybe<Tags>;
  update_topics?: Maybe<Topics_Mutation_Response>;
  update_topics_by_pk?: Maybe<Topics>;
  update_users?: Maybe<Users_Mutation_Response>;
  update_users_by_pk?: Maybe<Users>;
};

export type Mutation_RootCreateAuth0UserArgs = {
  arg1: Auth0Input;
};

export type Mutation_RootDelete_Activity_LoginsArgs = {
  where: Activity_Logins_Bool_Exp;
};

export type Mutation_RootDelete_Activity_Logins_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootDelete_CoursesArgs = {
  where: Courses_Bool_Exp;
};

export type Mutation_RootDelete_Courses_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootDelete_PagesArgs = {
  where: Pages_Bool_Exp;
};

export type Mutation_RootDelete_Pages_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootDelete_PostsArgs = {
  where: Posts_Bool_Exp;
};

export type Mutation_RootDelete_Posts_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootDelete_ProfilesArgs = {
  where: Profiles_Bool_Exp;
};

export type Mutation_RootDelete_Profiles_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootDelete_RolesArgs = {
  where: Roles_Bool_Exp;
};

export type Mutation_RootDelete_Roles_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootDelete_TagsArgs = {
  where: Tags_Bool_Exp;
};

export type Mutation_RootDelete_Tags_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootDelete_TopicsArgs = {
  where: Topics_Bool_Exp;
};

export type Mutation_RootDelete_Topics_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootDelete_UsersArgs = {
  where: Users_Bool_Exp;
};

export type Mutation_RootDelete_Users_By_PkArgs = {
  id: Scalars["Int"];
};

export type Mutation_RootInsert_Activity_LoginsArgs = {
  objects: Array<Activity_Logins_Insert_Input>;
  on_conflict?: Maybe<Activity_Logins_On_Conflict>;
};

export type Mutation_RootInsert_Activity_Logins_OneArgs = {
  object: Activity_Logins_Insert_Input;
  on_conflict?: Maybe<Activity_Logins_On_Conflict>;
};

export type Mutation_RootInsert_CoursesArgs = {
  objects: Array<Courses_Insert_Input>;
  on_conflict?: Maybe<Courses_On_Conflict>;
};

export type Mutation_RootInsert_Courses_OneArgs = {
  object: Courses_Insert_Input;
  on_conflict?: Maybe<Courses_On_Conflict>;
};

export type Mutation_RootInsert_PagesArgs = {
  objects: Array<Pages_Insert_Input>;
  on_conflict?: Maybe<Pages_On_Conflict>;
};

export type Mutation_RootInsert_Pages_OneArgs = {
  object: Pages_Insert_Input;
  on_conflict?: Maybe<Pages_On_Conflict>;
};

export type Mutation_RootInsert_PostsArgs = {
  objects: Array<Posts_Insert_Input>;
  on_conflict?: Maybe<Posts_On_Conflict>;
};

export type Mutation_RootInsert_Posts_OneArgs = {
  object: Posts_Insert_Input;
  on_conflict?: Maybe<Posts_On_Conflict>;
};

export type Mutation_RootInsert_ProfilesArgs = {
  objects: Array<Profiles_Insert_Input>;
  on_conflict?: Maybe<Profiles_On_Conflict>;
};

export type Mutation_RootInsert_Profiles_OneArgs = {
  object: Profiles_Insert_Input;
  on_conflict?: Maybe<Profiles_On_Conflict>;
};

export type Mutation_RootInsert_RolesArgs = {
  objects: Array<Roles_Insert_Input>;
  on_conflict?: Maybe<Roles_On_Conflict>;
};

export type Mutation_RootInsert_Roles_OneArgs = {
  object: Roles_Insert_Input;
  on_conflict?: Maybe<Roles_On_Conflict>;
};

export type Mutation_RootInsert_TagsArgs = {
  objects: Array<Tags_Insert_Input>;
  on_conflict?: Maybe<Tags_On_Conflict>;
};

export type Mutation_RootInsert_Tags_OneArgs = {
  object: Tags_Insert_Input;
  on_conflict?: Maybe<Tags_On_Conflict>;
};

export type Mutation_RootInsert_TopicsArgs = {
  objects: Array<Topics_Insert_Input>;
  on_conflict?: Maybe<Topics_On_Conflict>;
};

export type Mutation_RootInsert_Topics_OneArgs = {
  object: Topics_Insert_Input;
  on_conflict?: Maybe<Topics_On_Conflict>;
};

export type Mutation_RootInsert_UsersArgs = {
  objects: Array<Users_Insert_Input>;
  on_conflict?: Maybe<Users_On_Conflict>;
};

export type Mutation_RootInsert_Users_OneArgs = {
  object: Users_Insert_Input;
  on_conflict?: Maybe<Users_On_Conflict>;
};

export type Mutation_RootUpdate_Activity_LoginsArgs = {
  _inc?: Maybe<Activity_Logins_Inc_Input>;
  _set?: Maybe<Activity_Logins_Set_Input>;
  where: Activity_Logins_Bool_Exp;
};

export type Mutation_RootUpdate_Activity_Logins_By_PkArgs = {
  _inc?: Maybe<Activity_Logins_Inc_Input>;
  _set?: Maybe<Activity_Logins_Set_Input>;
  pk_columns: Activity_Logins_Pk_Columns_Input;
};

export type Mutation_RootUpdate_CoursesArgs = {
  _inc?: Maybe<Courses_Inc_Input>;
  _set?: Maybe<Courses_Set_Input>;
  where: Courses_Bool_Exp;
};

export type Mutation_RootUpdate_Courses_By_PkArgs = {
  _inc?: Maybe<Courses_Inc_Input>;
  _set?: Maybe<Courses_Set_Input>;
  pk_columns: Courses_Pk_Columns_Input;
};

export type Mutation_RootUpdate_PagesArgs = {
  _inc?: Maybe<Pages_Inc_Input>;
  _set?: Maybe<Pages_Set_Input>;
  where: Pages_Bool_Exp;
};

export type Mutation_RootUpdate_Pages_By_PkArgs = {
  _inc?: Maybe<Pages_Inc_Input>;
  _set?: Maybe<Pages_Set_Input>;
  pk_columns: Pages_Pk_Columns_Input;
};

export type Mutation_RootUpdate_PostsArgs = {
  _inc?: Maybe<Posts_Inc_Input>;
  _set?: Maybe<Posts_Set_Input>;
  where: Posts_Bool_Exp;
};

export type Mutation_RootUpdate_Posts_By_PkArgs = {
  _inc?: Maybe<Posts_Inc_Input>;
  _set?: Maybe<Posts_Set_Input>;
  pk_columns: Posts_Pk_Columns_Input;
};

export type Mutation_RootUpdate_ProfilesArgs = {
  _inc?: Maybe<Profiles_Inc_Input>;
  _set?: Maybe<Profiles_Set_Input>;
  where: Profiles_Bool_Exp;
};

export type Mutation_RootUpdate_Profiles_By_PkArgs = {
  _inc?: Maybe<Profiles_Inc_Input>;
  _set?: Maybe<Profiles_Set_Input>;
  pk_columns: Profiles_Pk_Columns_Input;
};

export type Mutation_RootUpdate_RolesArgs = {
  _inc?: Maybe<Roles_Inc_Input>;
  _set?: Maybe<Roles_Set_Input>;
  where: Roles_Bool_Exp;
};

export type Mutation_RootUpdate_Roles_By_PkArgs = {
  _inc?: Maybe<Roles_Inc_Input>;
  _set?: Maybe<Roles_Set_Input>;
  pk_columns: Roles_Pk_Columns_Input;
};

export type Mutation_RootUpdate_TagsArgs = {
  _inc?: Maybe<Tags_Inc_Input>;
  _set?: Maybe<Tags_Set_Input>;
  where: Tags_Bool_Exp;
};

export type Mutation_RootUpdate_Tags_By_PkArgs = {
  _inc?: Maybe<Tags_Inc_Input>;
  _set?: Maybe<Tags_Set_Input>;
  pk_columns: Tags_Pk_Columns_Input;
};

export type Mutation_RootUpdate_TopicsArgs = {
  _inc?: Maybe<Topics_Inc_Input>;
  _set?: Maybe<Topics_Set_Input>;
  where: Topics_Bool_Exp;
};

export type Mutation_RootUpdate_Topics_By_PkArgs = {
  _inc?: Maybe<Topics_Inc_Input>;
  _set?: Maybe<Topics_Set_Input>;
  pk_columns: Topics_Pk_Columns_Input;
};

export type Mutation_RootUpdate_UsersArgs = {
  _inc?: Maybe<Users_Inc_Input>;
  _set?: Maybe<Users_Set_Input>;
  where: Users_Bool_Exp;
};

export type Mutation_RootUpdate_Users_By_PkArgs = {
  _inc?: Maybe<Users_Inc_Input>;
  _set?: Maybe<Users_Set_Input>;
  pk_columns: Users_Pk_Columns_Input;
};

export type Numeric_Comparison_Exp = {
  _eq?: Maybe<Scalars["numeric"]>;
  _gt?: Maybe<Scalars["numeric"]>;
  _gte?: Maybe<Scalars["numeric"]>;
  _in?: Maybe<Array<Scalars["numeric"]>>;
  _is_null?: Maybe<Scalars["Boolean"]>;
  _lt?: Maybe<Scalars["numeric"]>;
  _lte?: Maybe<Scalars["numeric"]>;
  _neq?: Maybe<Scalars["numeric"]>;
  _nin?: Maybe<Array<Scalars["numeric"]>>;
};

export enum Order_By {
  Asc = "asc",
  AscNullsFirst = "asc_nulls_first",
  AscNullsLast = "asc_nulls_last",
  Desc = "desc",
  DescNullsFirst = "desc_nulls_first",
  DescNullsLast = "desc_nulls_last",
}

export type Pages = {
  __typename?: "pages";
  body: Scalars["String"];
  createdAt: Scalars["timestamptz"];
  createdBy: Scalars["Int"];
  id: Scalars["Int"];
  slug: Scalars["String"];
  status: Scalars["String"];
  title: Scalars["String"];
  updatedAt: Scalars["timestamptz"];
  updatedBy: Scalars["Int"];
  user: Users;
  userByUpdatedById: Users;
};

export type Pages_Aggregate = {
  __typename?: "pages_aggregate";
  aggregate?: Maybe<Pages_Aggregate_Fields>;
  nodes: Array<Pages>;
};

export type Pages_Aggregate_Fields = {
  __typename?: "pages_aggregate_fields";
  avg?: Maybe<Pages_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Pages_Max_Fields>;
  min?: Maybe<Pages_Min_Fields>;
  stddev?: Maybe<Pages_Stddev_Fields>;
  stddev_pop?: Maybe<Pages_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pages_Stddev_Samp_Fields>;
  sum?: Maybe<Pages_Sum_Fields>;
  var_pop?: Maybe<Pages_Var_Pop_Fields>;
  var_samp?: Maybe<Pages_Var_Samp_Fields>;
  variance?: Maybe<Pages_Variance_Fields>;
};

export type Pages_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pages_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Pages_Aggregate_Order_By = {
  avg?: Maybe<Pages_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pages_Max_Order_By>;
  min?: Maybe<Pages_Min_Order_By>;
  stddev?: Maybe<Pages_Stddev_Order_By>;
  stddev_pop?: Maybe<Pages_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pages_Stddev_Samp_Order_By>;
  sum?: Maybe<Pages_Sum_Order_By>;
  var_pop?: Maybe<Pages_Var_Pop_Order_By>;
  var_samp?: Maybe<Pages_Var_Samp_Order_By>;
  variance?: Maybe<Pages_Variance_Order_By>;
};

export type Pages_Arr_Rel_Insert_Input = {
  data: Array<Pages_Insert_Input>;
  on_conflict?: Maybe<Pages_On_Conflict>;
};

export type Pages_Avg_Fields = {
  __typename?: "pages_avg_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Pages_Avg_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Pages_Bool_Exp = {
  _and?: Maybe<Array<Pages_Bool_Exp>>;
  _not?: Maybe<Pages_Bool_Exp>;
  _or?: Maybe<Array<Pages_Bool_Exp>>;
  body?: Maybe<String_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  createdBy?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  updatedBy?: Maybe<Int_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  userByUpdatedById?: Maybe<Users_Bool_Exp>;
};

export enum Pages_Constraint {
  PagesPkey = "pages_pkey",
  PagesSlugKey = "pages_slug_key",
  PagesTitleKey = "pages_title_key",
}

export type Pages_Inc_Input = {
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Pages_Insert_Input = {
  body?: Maybe<Scalars["String"]>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  userByUpdatedById?: Maybe<Users_Obj_Rel_Insert_Input>;
};

export type Pages_Max_Fields = {
  __typename?: "pages_max_fields";
  body?: Maybe<Scalars["String"]>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Pages_Max_Order_By = {
  body?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Pages_Min_Fields = {
  __typename?: "pages_min_fields";
  body?: Maybe<Scalars["String"]>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Pages_Min_Order_By = {
  body?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Pages_Mutation_Response = {
  __typename?: "pages_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Pages>;
};

export type Pages_On_Conflict = {
  constraint: Pages_Constraint;
  update_columns?: Array<Pages_Update_Column>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type Pages_Order_By = {
  body?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  userByUpdatedById?: Maybe<Users_Order_By>;
};

export type Pages_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Pages_Select_Column {
  Body = "body",
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Id = "id",
  Slug = "slug",
  Status = "status",
  Title = "title",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
}

export type Pages_Set_Input = {
  body?: Maybe<Scalars["String"]>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Pages_Stddev_Fields = {
  __typename?: "pages_stddev_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Pages_Stddev_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Pages_Stddev_Pop_Fields = {
  __typename?: "pages_stddev_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Pages_Stddev_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Pages_Stddev_Samp_Fields = {
  __typename?: "pages_stddev_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Pages_Stddev_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Pages_Sum_Fields = {
  __typename?: "pages_sum_fields";
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Pages_Sum_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export enum Pages_Update_Column {
  Body = "body",
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Id = "id",
  Slug = "slug",
  Status = "status",
  Title = "title",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
}

export type Pages_Var_Pop_Fields = {
  __typename?: "pages_var_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Pages_Var_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Pages_Var_Samp_Fields = {
  __typename?: "pages_var_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Pages_Var_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Pages_Variance_Fields = {
  __typename?: "pages_variance_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Pages_Variance_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts = {
  __typename?: "posts";
  content: Scalars["String"];
  createdAt: Scalars["timestamptz"];
  createdBy: Scalars["Int"];
  id: Scalars["Int"];
  slug: Scalars["String"];
  status: Scalars["String"];
  summary: Scalars["String"];
  tagIds: Scalars["json"];
  title: Scalars["String"];
  topicIds: Scalars["json"];
  updatedAt: Scalars["timestamptz"];
  updatedBy: Scalars["Int"];
  userByCreatedById: Users;
  userByUpdatedById: Users;
};

export type PostsTagIdsArgs = {
  path?: Maybe<Scalars["String"]>;
};

export type PostsTopicIdsArgs = {
  path?: Maybe<Scalars["String"]>;
};

export type Posts_Aggregate = {
  __typename?: "posts_aggregate";
  aggregate?: Maybe<Posts_Aggregate_Fields>;
  nodes: Array<Posts>;
};

export type Posts_Aggregate_Fields = {
  __typename?: "posts_aggregate_fields";
  avg?: Maybe<Posts_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Posts_Max_Fields>;
  min?: Maybe<Posts_Min_Fields>;
  stddev?: Maybe<Posts_Stddev_Fields>;
  stddev_pop?: Maybe<Posts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Posts_Stddev_Samp_Fields>;
  sum?: Maybe<Posts_Sum_Fields>;
  var_pop?: Maybe<Posts_Var_Pop_Fields>;
  var_samp?: Maybe<Posts_Var_Samp_Fields>;
  variance?: Maybe<Posts_Variance_Fields>;
};

export type Posts_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Posts_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Posts_Aggregate_Order_By = {
  avg?: Maybe<Posts_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Posts_Max_Order_By>;
  min?: Maybe<Posts_Min_Order_By>;
  stddev?: Maybe<Posts_Stddev_Order_By>;
  stddev_pop?: Maybe<Posts_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Posts_Stddev_Samp_Order_By>;
  sum?: Maybe<Posts_Sum_Order_By>;
  var_pop?: Maybe<Posts_Var_Pop_Order_By>;
  var_samp?: Maybe<Posts_Var_Samp_Order_By>;
  variance?: Maybe<Posts_Variance_Order_By>;
};

export type Posts_Arr_Rel_Insert_Input = {
  data: Array<Posts_Insert_Input>;
  on_conflict?: Maybe<Posts_On_Conflict>;
};

export type Posts_Avg_Fields = {
  __typename?: "posts_avg_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Posts_Avg_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts_Bool_Exp = {
  _and?: Maybe<Array<Posts_Bool_Exp>>;
  _not?: Maybe<Posts_Bool_Exp>;
  _or?: Maybe<Array<Posts_Bool_Exp>>;
  content?: Maybe<String_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  createdBy?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  summary?: Maybe<String_Comparison_Exp>;
  tagIds?: Maybe<Json_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  topicIds?: Maybe<Json_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  updatedBy?: Maybe<Int_Comparison_Exp>;
  userByCreatedById?: Maybe<Users_Bool_Exp>;
  userByUpdatedById?: Maybe<Users_Bool_Exp>;
};

export enum Posts_Constraint {
  PostsPkey = "posts_pkey",
  PostsSlugKey = "posts_slug_key",
  PostsTitleKey = "posts_title_key",
}

export type Posts_Inc_Input = {
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Posts_Insert_Input = {
  content?: Maybe<Scalars["String"]>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  summary?: Maybe<Scalars["String"]>;
  tagIds?: Maybe<Scalars["json"]>;
  title?: Maybe<Scalars["String"]>;
  topicIds?: Maybe<Scalars["json"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
  userByCreatedById?: Maybe<Users_Obj_Rel_Insert_Input>;
  userByUpdatedById?: Maybe<Users_Obj_Rel_Insert_Input>;
};

export type Posts_Max_Fields = {
  __typename?: "posts_max_fields";
  content?: Maybe<Scalars["String"]>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  summary?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Posts_Max_Order_By = {
  content?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  summary?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts_Min_Fields = {
  __typename?: "posts_min_fields";
  content?: Maybe<Scalars["String"]>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  summary?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Posts_Min_Order_By = {
  content?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  summary?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts_Mutation_Response = {
  __typename?: "posts_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Posts>;
};

export type Posts_On_Conflict = {
  constraint: Posts_Constraint;
  update_columns?: Array<Posts_Update_Column>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type Posts_Order_By = {
  content?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  summary?: Maybe<Order_By>;
  tagIds?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  topicIds?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
  userByCreatedById?: Maybe<Users_Order_By>;
  userByUpdatedById?: Maybe<Users_Order_By>;
};

export type Posts_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Posts_Select_Column {
  Content = "content",
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Id = "id",
  Slug = "slug",
  Status = "status",
  Summary = "summary",
  TagIds = "tagIds",
  Title = "title",
  TopicIds = "topicIds",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
}

export type Posts_Set_Input = {
  content?: Maybe<Scalars["String"]>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  status?: Maybe<Scalars["String"]>;
  summary?: Maybe<Scalars["String"]>;
  tagIds?: Maybe<Scalars["json"]>;
  title?: Maybe<Scalars["String"]>;
  topicIds?: Maybe<Scalars["json"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Posts_Stddev_Fields = {
  __typename?: "posts_stddev_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Posts_Stddev_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts_Stddev_Pop_Fields = {
  __typename?: "posts_stddev_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Posts_Stddev_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts_Stddev_Samp_Fields = {
  __typename?: "posts_stddev_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Posts_Stddev_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts_Sum_Fields = {
  __typename?: "posts_sum_fields";
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Posts_Sum_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export enum Posts_Update_Column {
  Content = "content",
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Id = "id",
  Slug = "slug",
  Status = "status",
  Summary = "summary",
  TagIds = "tagIds",
  Title = "title",
  TopicIds = "topicIds",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
}

export type Posts_Var_Pop_Fields = {
  __typename?: "posts_var_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Posts_Var_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts_Var_Samp_Fields = {
  __typename?: "posts_var_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Posts_Var_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Posts_Variance_Fields = {
  __typename?: "posts_variance_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Posts_Variance_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Profiles = {
  __typename?: "profiles";
  avatarUrl?: Maybe<Scalars["String"]>;
  biography?: Maybe<Scalars["String"]>;
  id: Scalars["Int"];
  links?: Maybe<Scalars["json"]>;
  location?: Maybe<Scalars["String"]>;
  phone?: Maybe<Scalars["String"]>;
  phoneVerified?: Maybe<Scalars["Boolean"]>;
  public: Scalars["Boolean"];
  slug: Scalars["String"];
  user: Users;
  userId: Scalars["Int"];
};

export type ProfilesLinksArgs = {
  path?: Maybe<Scalars["String"]>;
};

export type Profiles_Aggregate = {
  __typename?: "profiles_aggregate";
  aggregate?: Maybe<Profiles_Aggregate_Fields>;
  nodes: Array<Profiles>;
};

export type Profiles_Aggregate_Fields = {
  __typename?: "profiles_aggregate_fields";
  avg?: Maybe<Profiles_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Profiles_Max_Fields>;
  min?: Maybe<Profiles_Min_Fields>;
  stddev?: Maybe<Profiles_Stddev_Fields>;
  stddev_pop?: Maybe<Profiles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Profiles_Stddev_Samp_Fields>;
  sum?: Maybe<Profiles_Sum_Fields>;
  var_pop?: Maybe<Profiles_Var_Pop_Fields>;
  var_samp?: Maybe<Profiles_Var_Samp_Fields>;
  variance?: Maybe<Profiles_Variance_Fields>;
};

export type Profiles_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Profiles_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Profiles_Avg_Fields = {
  __typename?: "profiles_avg_fields";
  id?: Maybe<Scalars["Float"]>;
  userId?: Maybe<Scalars["Float"]>;
};

export type Profiles_Bool_Exp = {
  _and?: Maybe<Array<Profiles_Bool_Exp>>;
  _not?: Maybe<Profiles_Bool_Exp>;
  _or?: Maybe<Array<Profiles_Bool_Exp>>;
  avatarUrl?: Maybe<String_Comparison_Exp>;
  biography?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  links?: Maybe<Json_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  phone?: Maybe<String_Comparison_Exp>;
  phoneVerified?: Maybe<Boolean_Comparison_Exp>;
  public?: Maybe<Boolean_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  userId?: Maybe<Int_Comparison_Exp>;
};

export enum Profiles_Constraint {
  UserMetaPkey = "user_meta_pkey",
  UserMetaUserIdKey = "user_meta_user_Id_key",
  UserProfilesPhoneNumberKey = "user_profiles_phone_number_key",
  UserProfilesSlugKey = "user_profiles_slug_key",
}

export type Profiles_Inc_Input = {
  id?: Maybe<Scalars["Int"]>;
  userId?: Maybe<Scalars["Int"]>;
};

export type Profiles_Insert_Input = {
  avatarUrl?: Maybe<Scalars["String"]>;
  biography?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  links?: Maybe<Scalars["json"]>;
  location?: Maybe<Scalars["String"]>;
  phone?: Maybe<Scalars["String"]>;
  phoneVerified?: Maybe<Scalars["Boolean"]>;
  public?: Maybe<Scalars["Boolean"]>;
  slug?: Maybe<Scalars["String"]>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  userId?: Maybe<Scalars["Int"]>;
};

export type Profiles_Max_Fields = {
  __typename?: "profiles_max_fields";
  avatarUrl?: Maybe<Scalars["String"]>;
  biography?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  location?: Maybe<Scalars["String"]>;
  phone?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  userId?: Maybe<Scalars["Int"]>;
};

export type Profiles_Min_Fields = {
  __typename?: "profiles_min_fields";
  avatarUrl?: Maybe<Scalars["String"]>;
  biography?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  location?: Maybe<Scalars["String"]>;
  phone?: Maybe<Scalars["String"]>;
  slug?: Maybe<Scalars["String"]>;
  userId?: Maybe<Scalars["Int"]>;
};

export type Profiles_Mutation_Response = {
  __typename?: "profiles_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Profiles>;
};

export type Profiles_Obj_Rel_Insert_Input = {
  data: Profiles_Insert_Input;
  on_conflict?: Maybe<Profiles_On_Conflict>;
};

export type Profiles_On_Conflict = {
  constraint: Profiles_Constraint;
  update_columns?: Array<Profiles_Update_Column>;
  where?: Maybe<Profiles_Bool_Exp>;
};

export type Profiles_Order_By = {
  avatarUrl?: Maybe<Order_By>;
  biography?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  links?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  phoneVerified?: Maybe<Order_By>;
  public?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  userId?: Maybe<Order_By>;
};

export type Profiles_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Profiles_Select_Column {
  AvatarUrl = "avatarUrl",
  Biography = "biography",
  Id = "id",
  Links = "links",
  Location = "location",
  Phone = "phone",
  PhoneVerified = "phoneVerified",
  Public = "public",
  Slug = "slug",
  UserId = "userId",
}

export type Profiles_Set_Input = {
  avatarUrl?: Maybe<Scalars["String"]>;
  biography?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  links?: Maybe<Scalars["json"]>;
  location?: Maybe<Scalars["String"]>;
  phone?: Maybe<Scalars["String"]>;
  phoneVerified?: Maybe<Scalars["Boolean"]>;
  public?: Maybe<Scalars["Boolean"]>;
  slug?: Maybe<Scalars["String"]>;
  userId?: Maybe<Scalars["Int"]>;
};

export type Profiles_Stddev_Fields = {
  __typename?: "profiles_stddev_fields";
  id?: Maybe<Scalars["Float"]>;
  userId?: Maybe<Scalars["Float"]>;
};

export type Profiles_Stddev_Pop_Fields = {
  __typename?: "profiles_stddev_pop_fields";
  id?: Maybe<Scalars["Float"]>;
  userId?: Maybe<Scalars["Float"]>;
};

export type Profiles_Stddev_Samp_Fields = {
  __typename?: "profiles_stddev_samp_fields";
  id?: Maybe<Scalars["Float"]>;
  userId?: Maybe<Scalars["Float"]>;
};

export type Profiles_Sum_Fields = {
  __typename?: "profiles_sum_fields";
  id?: Maybe<Scalars["Int"]>;
  userId?: Maybe<Scalars["Int"]>;
};

export enum Profiles_Update_Column {
  AvatarUrl = "avatarUrl",
  Biography = "biography",
  Id = "id",
  Links = "links",
  Location = "location",
  Phone = "phone",
  PhoneVerified = "phoneVerified",
  Public = "public",
  Slug = "slug",
  UserId = "userId",
}

export type Profiles_Var_Pop_Fields = {
  __typename?: "profiles_var_pop_fields";
  id?: Maybe<Scalars["Float"]>;
  userId?: Maybe<Scalars["Float"]>;
};

export type Profiles_Var_Samp_Fields = {
  __typename?: "profiles_var_samp_fields";
  id?: Maybe<Scalars["Float"]>;
  userId?: Maybe<Scalars["Float"]>;
};

export type Profiles_Variance_Fields = {
  __typename?: "profiles_variance_fields";
  id?: Maybe<Scalars["Float"]>;
  userId?: Maybe<Scalars["Float"]>;
};

export type Query_Root = {
  __typename?: "query_root";
  activity_logins: Array<Activity_Logins>;
  activity_logins_aggregate: Activity_Logins_Aggregate;
  activity_logins_by_pk?: Maybe<Activity_Logins>;
  courses: Array<Courses>;
  courses_aggregate: Courses_Aggregate;
  courses_by_pk?: Maybe<Courses>;
  pages: Array<Pages>;
  pages_aggregate: Pages_Aggregate;
  pages_by_pk?: Maybe<Pages>;
  posts: Array<Posts>;
  posts_aggregate: Posts_Aggregate;
  posts_by_pk?: Maybe<Posts>;
  profiles: Array<Profiles>;
  profiles_aggregate: Profiles_Aggregate;
  profiles_by_pk?: Maybe<Profiles>;
  roles: Array<Roles>;
  roles_aggregate: Roles_Aggregate;
  roles_by_pk?: Maybe<Roles>;
  tags: Array<Tags>;
  tags_aggregate: Tags_Aggregate;
  tags_by_pk?: Maybe<Tags>;
  topics: Array<Topics>;
  topics_aggregate: Topics_Aggregate;
  topics_by_pk?: Maybe<Topics>;
  users: Array<Users>;
  users_aggregate: Users_Aggregate;
  users_by_pk?: Maybe<Users>;
};

export type Query_RootActivity_LoginsArgs = {
  distinct_on?: Maybe<Array<Activity_Logins_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Activity_Logins_Order_By>>;
  where?: Maybe<Activity_Logins_Bool_Exp>;
};

export type Query_RootActivity_Logins_AggregateArgs = {
  distinct_on?: Maybe<Array<Activity_Logins_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Activity_Logins_Order_By>>;
  where?: Maybe<Activity_Logins_Bool_Exp>;
};

export type Query_RootActivity_Logins_By_PkArgs = {
  id: Scalars["Int"];
};

export type Query_RootCoursesArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type Query_RootCourses_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type Query_RootCourses_By_PkArgs = {
  id: Scalars["Int"];
};

export type Query_RootPagesArgs = {
  distinct_on?: Maybe<Array<Pages_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Pages_Order_By>>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type Query_RootPages_AggregateArgs = {
  distinct_on?: Maybe<Array<Pages_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Pages_Order_By>>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type Query_RootPages_By_PkArgs = {
  id: Scalars["Int"];
};

export type Query_RootPostsArgs = {
  distinct_on?: Maybe<Array<Posts_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Posts_Order_By>>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type Query_RootPosts_AggregateArgs = {
  distinct_on?: Maybe<Array<Posts_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Posts_Order_By>>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type Query_RootPosts_By_PkArgs = {
  id: Scalars["Int"];
};

export type Query_RootProfilesArgs = {
  distinct_on?: Maybe<Array<Profiles_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Profiles_Order_By>>;
  where?: Maybe<Profiles_Bool_Exp>;
};

export type Query_RootProfiles_AggregateArgs = {
  distinct_on?: Maybe<Array<Profiles_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Profiles_Order_By>>;
  where?: Maybe<Profiles_Bool_Exp>;
};

export type Query_RootProfiles_By_PkArgs = {
  id: Scalars["Int"];
};

export type Query_RootRolesArgs = {
  distinct_on?: Maybe<Array<Roles_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Roles_Order_By>>;
  where?: Maybe<Roles_Bool_Exp>;
};

export type Query_RootRoles_AggregateArgs = {
  distinct_on?: Maybe<Array<Roles_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Roles_Order_By>>;
  where?: Maybe<Roles_Bool_Exp>;
};

export type Query_RootRoles_By_PkArgs = {
  id: Scalars["Int"];
};

export type Query_RootTagsArgs = {
  distinct_on?: Maybe<Array<Tags_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Tags_Order_By>>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type Query_RootTags_AggregateArgs = {
  distinct_on?: Maybe<Array<Tags_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Tags_Order_By>>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type Query_RootTags_By_PkArgs = {
  id: Scalars["Int"];
};

export type Query_RootTopicsArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type Query_RootTopics_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type Query_RootTopics_By_PkArgs = {
  id: Scalars["Int"];
};

export type Query_RootUsersArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type Query_RootUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type Query_RootUsers_By_PkArgs = {
  id: Scalars["Int"];
};

export type Roles = {
  __typename?: "roles";
  description?: Maybe<Scalars["String"]>;
  id: Scalars["Int"];
  name?: Maybe<Scalars["String"]>;
  type?: Maybe<Scalars["String"]>;
  users: Array<Users>;
  users_aggregate: Users_Aggregate;
};

export type RolesUsersArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type RolesUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type Roles_Aggregate = {
  __typename?: "roles_aggregate";
  aggregate?: Maybe<Roles_Aggregate_Fields>;
  nodes: Array<Roles>;
};

export type Roles_Aggregate_Fields = {
  __typename?: "roles_aggregate_fields";
  avg?: Maybe<Roles_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Roles_Max_Fields>;
  min?: Maybe<Roles_Min_Fields>;
  stddev?: Maybe<Roles_Stddev_Fields>;
  stddev_pop?: Maybe<Roles_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Roles_Stddev_Samp_Fields>;
  sum?: Maybe<Roles_Sum_Fields>;
  var_pop?: Maybe<Roles_Var_Pop_Fields>;
  var_samp?: Maybe<Roles_Var_Samp_Fields>;
  variance?: Maybe<Roles_Variance_Fields>;
};

export type Roles_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Roles_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Roles_Avg_Fields = {
  __typename?: "roles_avg_fields";
  id?: Maybe<Scalars["Float"]>;
};

export type Roles_Bool_Exp = {
  _and?: Maybe<Array<Roles_Bool_Exp>>;
  _not?: Maybe<Roles_Bool_Exp>;
  _or?: Maybe<Array<Roles_Bool_Exp>>;
  description?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  users?: Maybe<Users_Bool_Exp>;
};

export enum Roles_Constraint {
  RolesNameKey = "roles_name_key",
  RolesShortnameKey = "roles_shortname_key",
  UserTypesPkey = "user_types_pkey",
}

export type Roles_Inc_Input = {
  id?: Maybe<Scalars["Int"]>;
};

export type Roles_Insert_Input = {
  description?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  name?: Maybe<Scalars["String"]>;
  type?: Maybe<Scalars["String"]>;
  users?: Maybe<Users_Arr_Rel_Insert_Input>;
};

export type Roles_Max_Fields = {
  __typename?: "roles_max_fields";
  description?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  name?: Maybe<Scalars["String"]>;
  type?: Maybe<Scalars["String"]>;
};

export type Roles_Min_Fields = {
  __typename?: "roles_min_fields";
  description?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  name?: Maybe<Scalars["String"]>;
  type?: Maybe<Scalars["String"]>;
};

export type Roles_Mutation_Response = {
  __typename?: "roles_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Roles>;
};

export type Roles_Obj_Rel_Insert_Input = {
  data: Roles_Insert_Input;
  on_conflict?: Maybe<Roles_On_Conflict>;
};

export type Roles_On_Conflict = {
  constraint: Roles_Constraint;
  update_columns?: Array<Roles_Update_Column>;
  where?: Maybe<Roles_Bool_Exp>;
};

export type Roles_Order_By = {
  description?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  users_aggregate?: Maybe<Users_Aggregate_Order_By>;
};

export type Roles_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Roles_Select_Column {
  Description = "description",
  Id = "id",
  Name = "name",
  Type = "type",
}

export type Roles_Set_Input = {
  description?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  name?: Maybe<Scalars["String"]>;
  type?: Maybe<Scalars["String"]>;
};

export type Roles_Stddev_Fields = {
  __typename?: "roles_stddev_fields";
  id?: Maybe<Scalars["Float"]>;
};

export type Roles_Stddev_Pop_Fields = {
  __typename?: "roles_stddev_pop_fields";
  id?: Maybe<Scalars["Float"]>;
};

export type Roles_Stddev_Samp_Fields = {
  __typename?: "roles_stddev_samp_fields";
  id?: Maybe<Scalars["Float"]>;
};

export type Roles_Sum_Fields = {
  __typename?: "roles_sum_fields";
  id?: Maybe<Scalars["Int"]>;
};

export enum Roles_Update_Column {
  Description = "description",
  Id = "id",
  Name = "name",
  Type = "type",
}

export type Roles_Var_Pop_Fields = {
  __typename?: "roles_var_pop_fields";
  id?: Maybe<Scalars["Float"]>;
};

export type Roles_Var_Samp_Fields = {
  __typename?: "roles_var_samp_fields";
  id?: Maybe<Scalars["Float"]>;
};

export type Roles_Variance_Fields = {
  __typename?: "roles_variance_fields";
  id?: Maybe<Scalars["Float"]>;
};

export type String_Comparison_Exp = {
  _eq?: Maybe<Scalars["String"]>;
  _gt?: Maybe<Scalars["String"]>;
  _gte?: Maybe<Scalars["String"]>;
  _ilike?: Maybe<Scalars["String"]>;
  _in?: Maybe<Array<Scalars["String"]>>;
  _iregex?: Maybe<Scalars["String"]>;
  _is_null?: Maybe<Scalars["Boolean"]>;
  _like?: Maybe<Scalars["String"]>;
  _lt?: Maybe<Scalars["String"]>;
  _lte?: Maybe<Scalars["String"]>;
  _neq?: Maybe<Scalars["String"]>;
  _nilike?: Maybe<Scalars["String"]>;
  _nin?: Maybe<Array<Scalars["String"]>>;
  _niregex?: Maybe<Scalars["String"]>;
  _nlike?: Maybe<Scalars["String"]>;
  _nregex?: Maybe<Scalars["String"]>;
  _nsimilar?: Maybe<Scalars["String"]>;
  _regex?: Maybe<Scalars["String"]>;
  _similar?: Maybe<Scalars["String"]>;
};

export type Subscription_Root = {
  __typename?: "subscription_root";
  activity_logins: Array<Activity_Logins>;
  activity_logins_aggregate: Activity_Logins_Aggregate;
  activity_logins_by_pk?: Maybe<Activity_Logins>;
  courses: Array<Courses>;
  courses_aggregate: Courses_Aggregate;
  courses_by_pk?: Maybe<Courses>;
  pages: Array<Pages>;
  pages_aggregate: Pages_Aggregate;
  pages_by_pk?: Maybe<Pages>;
  posts: Array<Posts>;
  posts_aggregate: Posts_Aggregate;
  posts_by_pk?: Maybe<Posts>;
  profiles: Array<Profiles>;
  profiles_aggregate: Profiles_Aggregate;
  profiles_by_pk?: Maybe<Profiles>;
  roles: Array<Roles>;
  roles_aggregate: Roles_Aggregate;
  roles_by_pk?: Maybe<Roles>;
  tags: Array<Tags>;
  tags_aggregate: Tags_Aggregate;
  tags_by_pk?: Maybe<Tags>;
  topics: Array<Topics>;
  topics_aggregate: Topics_Aggregate;
  topics_by_pk?: Maybe<Topics>;
  users: Array<Users>;
  users_aggregate: Users_Aggregate;
  users_by_pk?: Maybe<Users>;
};

export type Subscription_RootActivity_LoginsArgs = {
  distinct_on?: Maybe<Array<Activity_Logins_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Activity_Logins_Order_By>>;
  where?: Maybe<Activity_Logins_Bool_Exp>;
};

export type Subscription_RootActivity_Logins_AggregateArgs = {
  distinct_on?: Maybe<Array<Activity_Logins_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Activity_Logins_Order_By>>;
  where?: Maybe<Activity_Logins_Bool_Exp>;
};

export type Subscription_RootActivity_Logins_By_PkArgs = {
  id: Scalars["Int"];
};

export type Subscription_RootCoursesArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type Subscription_RootCourses_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type Subscription_RootCourses_By_PkArgs = {
  id: Scalars["Int"];
};

export type Subscription_RootPagesArgs = {
  distinct_on?: Maybe<Array<Pages_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Pages_Order_By>>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type Subscription_RootPages_AggregateArgs = {
  distinct_on?: Maybe<Array<Pages_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Pages_Order_By>>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type Subscription_RootPages_By_PkArgs = {
  id: Scalars["Int"];
};

export type Subscription_RootPostsArgs = {
  distinct_on?: Maybe<Array<Posts_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Posts_Order_By>>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type Subscription_RootPosts_AggregateArgs = {
  distinct_on?: Maybe<Array<Posts_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Posts_Order_By>>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type Subscription_RootPosts_By_PkArgs = {
  id: Scalars["Int"];
};

export type Subscription_RootProfilesArgs = {
  distinct_on?: Maybe<Array<Profiles_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Profiles_Order_By>>;
  where?: Maybe<Profiles_Bool_Exp>;
};

export type Subscription_RootProfiles_AggregateArgs = {
  distinct_on?: Maybe<Array<Profiles_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Profiles_Order_By>>;
  where?: Maybe<Profiles_Bool_Exp>;
};

export type Subscription_RootProfiles_By_PkArgs = {
  id: Scalars["Int"];
};

export type Subscription_RootRolesArgs = {
  distinct_on?: Maybe<Array<Roles_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Roles_Order_By>>;
  where?: Maybe<Roles_Bool_Exp>;
};

export type Subscription_RootRoles_AggregateArgs = {
  distinct_on?: Maybe<Array<Roles_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Roles_Order_By>>;
  where?: Maybe<Roles_Bool_Exp>;
};

export type Subscription_RootRoles_By_PkArgs = {
  id: Scalars["Int"];
};

export type Subscription_RootTagsArgs = {
  distinct_on?: Maybe<Array<Tags_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Tags_Order_By>>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type Subscription_RootTags_AggregateArgs = {
  distinct_on?: Maybe<Array<Tags_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Tags_Order_By>>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type Subscription_RootTags_By_PkArgs = {
  id: Scalars["Int"];
};

export type Subscription_RootTopicsArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type Subscription_RootTopics_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type Subscription_RootTopics_By_PkArgs = {
  id: Scalars["Int"];
};

export type Subscription_RootUsersArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type Subscription_RootUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type Subscription_RootUsers_By_PkArgs = {
  id: Scalars["Int"];
};

export type Tags = {
  __typename?: "tags";
  createdAt: Scalars["timestamptz"];
  createdBy: Scalars["Int"];
  id: Scalars["Int"];
  slug: Scalars["String"];
  title: Scalars["String"];
  updatedAt: Scalars["timestamptz"];
  updatedBy: Scalars["Int"];
  user: Users;
  userByUpdatedById: Users;
};

export type Tags_Aggregate = {
  __typename?: "tags_aggregate";
  aggregate?: Maybe<Tags_Aggregate_Fields>;
  nodes: Array<Tags>;
};

export type Tags_Aggregate_Fields = {
  __typename?: "tags_aggregate_fields";
  avg?: Maybe<Tags_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Tags_Max_Fields>;
  min?: Maybe<Tags_Min_Fields>;
  stddev?: Maybe<Tags_Stddev_Fields>;
  stddev_pop?: Maybe<Tags_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tags_Stddev_Samp_Fields>;
  sum?: Maybe<Tags_Sum_Fields>;
  var_pop?: Maybe<Tags_Var_Pop_Fields>;
  var_samp?: Maybe<Tags_Var_Samp_Fields>;
  variance?: Maybe<Tags_Variance_Fields>;
};

export type Tags_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Tags_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Tags_Aggregate_Order_By = {
  avg?: Maybe<Tags_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Tags_Max_Order_By>;
  min?: Maybe<Tags_Min_Order_By>;
  stddev?: Maybe<Tags_Stddev_Order_By>;
  stddev_pop?: Maybe<Tags_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Tags_Stddev_Samp_Order_By>;
  sum?: Maybe<Tags_Sum_Order_By>;
  var_pop?: Maybe<Tags_Var_Pop_Order_By>;
  var_samp?: Maybe<Tags_Var_Samp_Order_By>;
  variance?: Maybe<Tags_Variance_Order_By>;
};

export type Tags_Arr_Rel_Insert_Input = {
  data: Array<Tags_Insert_Input>;
  on_conflict?: Maybe<Tags_On_Conflict>;
};

export type Tags_Avg_Fields = {
  __typename?: "tags_avg_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Tags_Avg_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Tags_Bool_Exp = {
  _and?: Maybe<Array<Tags_Bool_Exp>>;
  _not?: Maybe<Tags_Bool_Exp>;
  _or?: Maybe<Array<Tags_Bool_Exp>>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  createdBy?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  updatedBy?: Maybe<Int_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  userByUpdatedById?: Maybe<Users_Bool_Exp>;
};

export enum Tags_Constraint {
  TagsPkey = "tags_pkey",
  TagsSlugKey = "tags_slug_key",
  TagsTitleKey = "tags_title_key",
}

export type Tags_Inc_Input = {
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Tags_Insert_Input = {
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  userByUpdatedById?: Maybe<Users_Obj_Rel_Insert_Input>;
};

export type Tags_Max_Fields = {
  __typename?: "tags_max_fields";
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Tags_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Tags_Min_Fields = {
  __typename?: "tags_min_fields";
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Tags_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Tags_Mutation_Response = {
  __typename?: "tags_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Tags>;
};

export type Tags_On_Conflict = {
  constraint: Tags_Constraint;
  update_columns?: Array<Tags_Update_Column>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type Tags_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  userByUpdatedById?: Maybe<Users_Order_By>;
};

export type Tags_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Tags_Select_Column {
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Id = "id",
  Slug = "slug",
  Title = "title",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
}

export type Tags_Set_Input = {
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Tags_Stddev_Fields = {
  __typename?: "tags_stddev_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Tags_Stddev_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Tags_Stddev_Pop_Fields = {
  __typename?: "tags_stddev_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Tags_Stddev_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Tags_Stddev_Samp_Fields = {
  __typename?: "tags_stddev_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Tags_Stddev_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Tags_Sum_Fields = {
  __typename?: "tags_sum_fields";
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Tags_Sum_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export enum Tags_Update_Column {
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Id = "id",
  Slug = "slug",
  Title = "title",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
}

export type Tags_Var_Pop_Fields = {
  __typename?: "tags_var_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Tags_Var_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Tags_Var_Samp_Fields = {
  __typename?: "tags_var_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Tags_Var_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Tags_Variance_Fields = {
  __typename?: "tags_variance_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Tags_Variance_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Timestamptz_Comparison_Exp = {
  _eq?: Maybe<Scalars["timestamptz"]>;
  _gt?: Maybe<Scalars["timestamptz"]>;
  _gte?: Maybe<Scalars["timestamptz"]>;
  _in?: Maybe<Array<Scalars["timestamptz"]>>;
  _is_null?: Maybe<Scalars["Boolean"]>;
  _lt?: Maybe<Scalars["timestamptz"]>;
  _lte?: Maybe<Scalars["timestamptz"]>;
  _neq?: Maybe<Scalars["timestamptz"]>;
  _nin?: Maybe<Array<Scalars["timestamptz"]>>;
};

export type Topics = {
  __typename?: "topics";
  createdAt: Scalars["timestamptz"];
  createdBy: Scalars["Int"];
  id: Scalars["Int"];
  parentTopicIds?: Maybe<Scalars["json"]>;
  slug: Scalars["String"];
  title: Scalars["String"];
  updatedAt: Scalars["timestamptz"];
  updatedBy: Scalars["Int"];
  user: Users;
  userByUpdatedById: Users;
};

export type TopicsParentTopicIdsArgs = {
  path?: Maybe<Scalars["String"]>;
};

export type Topics_Aggregate = {
  __typename?: "topics_aggregate";
  aggregate?: Maybe<Topics_Aggregate_Fields>;
  nodes: Array<Topics>;
};

export type Topics_Aggregate_Fields = {
  __typename?: "topics_aggregate_fields";
  avg?: Maybe<Topics_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Topics_Max_Fields>;
  min?: Maybe<Topics_Min_Fields>;
  stddev?: Maybe<Topics_Stddev_Fields>;
  stddev_pop?: Maybe<Topics_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Topics_Stddev_Samp_Fields>;
  sum?: Maybe<Topics_Sum_Fields>;
  var_pop?: Maybe<Topics_Var_Pop_Fields>;
  var_samp?: Maybe<Topics_Var_Samp_Fields>;
  variance?: Maybe<Topics_Variance_Fields>;
};

export type Topics_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Topics_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Topics_Aggregate_Order_By = {
  avg?: Maybe<Topics_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Topics_Max_Order_By>;
  min?: Maybe<Topics_Min_Order_By>;
  stddev?: Maybe<Topics_Stddev_Order_By>;
  stddev_pop?: Maybe<Topics_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Topics_Stddev_Samp_Order_By>;
  sum?: Maybe<Topics_Sum_Order_By>;
  var_pop?: Maybe<Topics_Var_Pop_Order_By>;
  var_samp?: Maybe<Topics_Var_Samp_Order_By>;
  variance?: Maybe<Topics_Variance_Order_By>;
};

export type Topics_Arr_Rel_Insert_Input = {
  data: Array<Topics_Insert_Input>;
  on_conflict?: Maybe<Topics_On_Conflict>;
};

export type Topics_Avg_Fields = {
  __typename?: "topics_avg_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Topics_Avg_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Topics_Bool_Exp = {
  _and?: Maybe<Array<Topics_Bool_Exp>>;
  _not?: Maybe<Topics_Bool_Exp>;
  _or?: Maybe<Array<Topics_Bool_Exp>>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  createdBy?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  parentTopicIds?: Maybe<Json_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  updatedBy?: Maybe<Int_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  userByUpdatedById?: Maybe<Users_Bool_Exp>;
};

export enum Topics_Constraint {
  TopicsPkey = "topics_pkey",
  TopicsSlugKey = "topics_slug_key",
  TopicsTitleKey = "topics_title_key",
}

export type Topics_Inc_Input = {
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Topics_Insert_Input = {
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  parentTopicIds?: Maybe<Scalars["json"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  userByUpdatedById?: Maybe<Users_Obj_Rel_Insert_Input>;
};

export type Topics_Max_Fields = {
  __typename?: "topics_max_fields";
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Topics_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Topics_Min_Fields = {
  __typename?: "topics_min_fields";
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Topics_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Topics_Mutation_Response = {
  __typename?: "topics_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Topics>;
};

export type Topics_On_Conflict = {
  constraint: Topics_Constraint;
  update_columns?: Array<Topics_Update_Column>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type Topics_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  parentTopicIds?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  userByUpdatedById?: Maybe<Users_Order_By>;
};

export type Topics_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Topics_Select_Column {
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Id = "id",
  ParentTopicIds = "parentTopicIds",
  Slug = "slug",
  Title = "title",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
}

export type Topics_Set_Input = {
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  parentTopicIds?: Maybe<Scalars["json"]>;
  slug?: Maybe<Scalars["String"]>;
  title?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Topics_Stddev_Fields = {
  __typename?: "topics_stddev_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Topics_Stddev_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Topics_Stddev_Pop_Fields = {
  __typename?: "topics_stddev_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Topics_Stddev_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Topics_Stddev_Samp_Fields = {
  __typename?: "topics_stddev_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Topics_Stddev_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Topics_Sum_Fields = {
  __typename?: "topics_sum_fields";
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Topics_Sum_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export enum Topics_Update_Column {
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Id = "id",
  ParentTopicIds = "parentTopicIds",
  Slug = "slug",
  Title = "title",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
}

export type Topics_Var_Pop_Fields = {
  __typename?: "topics_var_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Topics_Var_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Topics_Var_Samp_Fields = {
  __typename?: "topics_var_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Topics_Var_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Topics_Variance_Fields = {
  __typename?: "topics_variance_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Topics_Variance_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Users = {
  __typename?: "users";
  courses: Array<Courses>;
  coursesByUpdatedById: Array<Courses>;
  coursesByUpdatedById_aggregate: Courses_Aggregate;
  courses_aggregate: Courses_Aggregate;
  createdAt: Scalars["timestamptz"];
  createdBy?: Maybe<Scalars["Int"]>;
  email?: Maybe<Scalars["String"]>;
  firstName: Scalars["String"];
  fullName?: Maybe<Scalars["String"]>;
  id: Scalars["Int"];
  lastActive?: Maybe<Scalars["timestamptz"]>;
  lastName: Scalars["String"];
  logins: Array<Activity_Logins>;
  logins_aggregate: Activity_Logins_Aggregate;
  pages: Array<Pages>;
  pagesByCreatedById: Array<Pages>;
  pagesByCreatedById_aggregate: Pages_Aggregate;
  pages_aggregate: Pages_Aggregate;
  posts: Array<Posts>;
  postsByUpdatedById: Array<Posts>;
  postsByUpdatedById_aggregate: Posts_Aggregate;
  posts_aggregate: Posts_Aggregate;
  profile?: Maybe<Profiles>;
  pronouns?: Maybe<Scalars["String"]>;
  role: Roles;
  roleId: Scalars["Int"];
  status: Scalars["String"];
  tags: Array<Tags>;
  tagsByUpdatedById: Array<Tags>;
  tagsByUpdatedById_aggregate: Tags_Aggregate;
  tags_aggregate: Tags_Aggregate;
  topics: Array<Topics>;
  topicsByUpdatedById: Array<Topics>;
  topicsByUpdatedById_aggregate: Topics_Aggregate;
  topics_aggregate: Topics_Aggregate;
  updatedAt: Scalars["timestamptz"];
  updatedBy?: Maybe<Scalars["Int"]>;
  user?: Maybe<Users>;
  userByUpdatedById?: Maybe<Users>;
  username?: Maybe<Scalars["String"]>;
  users: Array<Users>;
  usersByUpdatedById: Array<Users>;
  usersByUpdatedById_aggregate: Users_Aggregate;
  users_aggregate: Users_Aggregate;
  verified: Scalars["Boolean"];
};

export type UsersCoursesArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type UsersCoursesByUpdatedByIdArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type UsersCoursesByUpdatedById_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type UsersCourses_AggregateArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};

export type UsersLoginsArgs = {
  distinct_on?: Maybe<Array<Activity_Logins_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Activity_Logins_Order_By>>;
  where?: Maybe<Activity_Logins_Bool_Exp>;
};

export type UsersLogins_AggregateArgs = {
  distinct_on?: Maybe<Array<Activity_Logins_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Activity_Logins_Order_By>>;
  where?: Maybe<Activity_Logins_Bool_Exp>;
};

export type UsersPagesArgs = {
  distinct_on?: Maybe<Array<Pages_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Pages_Order_By>>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type UsersPagesByCreatedByIdArgs = {
  distinct_on?: Maybe<Array<Pages_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Pages_Order_By>>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type UsersPagesByCreatedById_AggregateArgs = {
  distinct_on?: Maybe<Array<Pages_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Pages_Order_By>>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type UsersPages_AggregateArgs = {
  distinct_on?: Maybe<Array<Pages_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Pages_Order_By>>;
  where?: Maybe<Pages_Bool_Exp>;
};

export type UsersPostsArgs = {
  distinct_on?: Maybe<Array<Posts_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Posts_Order_By>>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type UsersPostsByUpdatedByIdArgs = {
  distinct_on?: Maybe<Array<Posts_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Posts_Order_By>>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type UsersPostsByUpdatedById_AggregateArgs = {
  distinct_on?: Maybe<Array<Posts_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Posts_Order_By>>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type UsersPosts_AggregateArgs = {
  distinct_on?: Maybe<Array<Posts_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Posts_Order_By>>;
  where?: Maybe<Posts_Bool_Exp>;
};

export type UsersTagsArgs = {
  distinct_on?: Maybe<Array<Tags_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Tags_Order_By>>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type UsersTagsByUpdatedByIdArgs = {
  distinct_on?: Maybe<Array<Tags_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Tags_Order_By>>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type UsersTagsByUpdatedById_AggregateArgs = {
  distinct_on?: Maybe<Array<Tags_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Tags_Order_By>>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type UsersTags_AggregateArgs = {
  distinct_on?: Maybe<Array<Tags_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Tags_Order_By>>;
  where?: Maybe<Tags_Bool_Exp>;
};

export type UsersTopicsArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type UsersTopicsByUpdatedByIdArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type UsersTopicsByUpdatedById_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type UsersTopics_AggregateArgs = {
  distinct_on?: Maybe<Array<Topics_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Topics_Order_By>>;
  where?: Maybe<Topics_Bool_Exp>;
};

export type UsersUsersArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type UsersUsersByUpdatedByIdArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type UsersUsersByUpdatedById_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type UsersUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<Users_Select_Column>>;
  limit?: Maybe<Scalars["Int"]>;
  offset?: Maybe<Scalars["Int"]>;
  order_by?: Maybe<Array<Users_Order_By>>;
  where?: Maybe<Users_Bool_Exp>;
};

export type Users_Aggregate = {
  __typename?: "users_aggregate";
  aggregate?: Maybe<Users_Aggregate_Fields>;
  nodes: Array<Users>;
};

export type Users_Aggregate_Fields = {
  __typename?: "users_aggregate_fields";
  avg?: Maybe<Users_Avg_Fields>;
  count: Scalars["Int"];
  max?: Maybe<Users_Max_Fields>;
  min?: Maybe<Users_Min_Fields>;
  stddev?: Maybe<Users_Stddev_Fields>;
  stddev_pop?: Maybe<Users_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Users_Stddev_Samp_Fields>;
  sum?: Maybe<Users_Sum_Fields>;
  var_pop?: Maybe<Users_Var_Pop_Fields>;
  var_samp?: Maybe<Users_Var_Samp_Fields>;
  variance?: Maybe<Users_Variance_Fields>;
};

export type Users_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Users_Select_Column>>;
  distinct?: Maybe<Scalars["Boolean"]>;
};

export type Users_Aggregate_Order_By = {
  avg?: Maybe<Users_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Users_Max_Order_By>;
  min?: Maybe<Users_Min_Order_By>;
  stddev?: Maybe<Users_Stddev_Order_By>;
  stddev_pop?: Maybe<Users_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Users_Stddev_Samp_Order_By>;
  sum?: Maybe<Users_Sum_Order_By>;
  var_pop?: Maybe<Users_Var_Pop_Order_By>;
  var_samp?: Maybe<Users_Var_Samp_Order_By>;
  variance?: Maybe<Users_Variance_Order_By>;
};

export type Users_Arr_Rel_Insert_Input = {
  data: Array<Users_Insert_Input>;
  on_conflict?: Maybe<Users_On_Conflict>;
};

export type Users_Avg_Fields = {
  __typename?: "users_avg_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  roleId?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Users_Avg_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Users_Bool_Exp = {
  _and?: Maybe<Array<Users_Bool_Exp>>;
  _not?: Maybe<Users_Bool_Exp>;
  _or?: Maybe<Array<Users_Bool_Exp>>;
  courses?: Maybe<Courses_Bool_Exp>;
  coursesByUpdatedById?: Maybe<Courses_Bool_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  createdBy?: Maybe<Int_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  firstName?: Maybe<String_Comparison_Exp>;
  fullName?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  lastActive?: Maybe<Timestamptz_Comparison_Exp>;
  lastName?: Maybe<String_Comparison_Exp>;
  logins?: Maybe<Activity_Logins_Bool_Exp>;
  pages?: Maybe<Pages_Bool_Exp>;
  pagesByCreatedById?: Maybe<Pages_Bool_Exp>;
  posts?: Maybe<Posts_Bool_Exp>;
  postsByUpdatedById?: Maybe<Posts_Bool_Exp>;
  profile?: Maybe<Profiles_Bool_Exp>;
  pronouns?: Maybe<String_Comparison_Exp>;
  role?: Maybe<Roles_Bool_Exp>;
  roleId?: Maybe<Int_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  tags?: Maybe<Tags_Bool_Exp>;
  tagsByUpdatedById?: Maybe<Tags_Bool_Exp>;
  topics?: Maybe<Topics_Bool_Exp>;
  topicsByUpdatedById?: Maybe<Topics_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  updatedBy?: Maybe<Int_Comparison_Exp>;
  user?: Maybe<Users_Bool_Exp>;
  userByUpdatedById?: Maybe<Users_Bool_Exp>;
  username?: Maybe<String_Comparison_Exp>;
  users?: Maybe<Users_Bool_Exp>;
  usersByUpdatedById?: Maybe<Users_Bool_Exp>;
  verified?: Maybe<Boolean_Comparison_Exp>;
};

export enum Users_Constraint {
  UsersEmailKey = "users_email_key",
  UsersPkey = "users_pkey",
  UsersUsernameKey = "users_username_key",
}

export type Users_Inc_Input = {
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  roleId?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Users_Insert_Input = {
  courses?: Maybe<Courses_Arr_Rel_Insert_Input>;
  coursesByUpdatedById?: Maybe<Courses_Arr_Rel_Insert_Input>;
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  email?: Maybe<Scalars["String"]>;
  firstName?: Maybe<Scalars["String"]>;
  fullName?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  lastActive?: Maybe<Scalars["timestamptz"]>;
  lastName?: Maybe<Scalars["String"]>;
  logins?: Maybe<Activity_Logins_Arr_Rel_Insert_Input>;
  pages?: Maybe<Pages_Arr_Rel_Insert_Input>;
  pagesByCreatedById?: Maybe<Pages_Arr_Rel_Insert_Input>;
  posts?: Maybe<Posts_Arr_Rel_Insert_Input>;
  postsByUpdatedById?: Maybe<Posts_Arr_Rel_Insert_Input>;
  profile?: Maybe<Profiles_Obj_Rel_Insert_Input>;
  pronouns?: Maybe<Scalars["String"]>;
  role?: Maybe<Roles_Obj_Rel_Insert_Input>;
  roleId?: Maybe<Scalars["Int"]>;
  status?: Maybe<Scalars["String"]>;
  tags?: Maybe<Tags_Arr_Rel_Insert_Input>;
  tagsByUpdatedById?: Maybe<Tags_Arr_Rel_Insert_Input>;
  topics?: Maybe<Topics_Arr_Rel_Insert_Input>;
  topicsByUpdatedById?: Maybe<Topics_Arr_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
  user?: Maybe<Users_Obj_Rel_Insert_Input>;
  userByUpdatedById?: Maybe<Users_Obj_Rel_Insert_Input>;
  username?: Maybe<Scalars["String"]>;
  users?: Maybe<Users_Arr_Rel_Insert_Input>;
  usersByUpdatedById?: Maybe<Users_Arr_Rel_Insert_Input>;
  verified?: Maybe<Scalars["Boolean"]>;
};

export type Users_Max_Fields = {
  __typename?: "users_max_fields";
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  email?: Maybe<Scalars["String"]>;
  firstName?: Maybe<Scalars["String"]>;
  fullName?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  lastActive?: Maybe<Scalars["timestamptz"]>;
  lastName?: Maybe<Scalars["String"]>;
  pronouns?: Maybe<Scalars["String"]>;
  roleId?: Maybe<Scalars["Int"]>;
  status?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
  username?: Maybe<Scalars["String"]>;
};

export type Users_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  firstName?: Maybe<Order_By>;
  fullName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastActive?: Maybe<Order_By>;
  lastName?: Maybe<Order_By>;
  pronouns?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
  username?: Maybe<Order_By>;
};

export type Users_Min_Fields = {
  __typename?: "users_min_fields";
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  email?: Maybe<Scalars["String"]>;
  firstName?: Maybe<Scalars["String"]>;
  fullName?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  lastActive?: Maybe<Scalars["timestamptz"]>;
  lastName?: Maybe<Scalars["String"]>;
  pronouns?: Maybe<Scalars["String"]>;
  roleId?: Maybe<Scalars["Int"]>;
  status?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
  username?: Maybe<Scalars["String"]>;
};

export type Users_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  firstName?: Maybe<Order_By>;
  fullName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastActive?: Maybe<Order_By>;
  lastName?: Maybe<Order_By>;
  pronouns?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
  username?: Maybe<Order_By>;
};

export type Users_Mutation_Response = {
  __typename?: "users_mutation_response";
  affected_rows: Scalars["Int"];
  returning: Array<Users>;
};

export type Users_Obj_Rel_Insert_Input = {
  data: Users_Insert_Input;
  on_conflict?: Maybe<Users_On_Conflict>;
};

export type Users_On_Conflict = {
  constraint: Users_Constraint;
  update_columns?: Array<Users_Update_Column>;
  where?: Maybe<Users_Bool_Exp>;
};

export type Users_Order_By = {
  coursesByUpdatedById_aggregate?: Maybe<Courses_Aggregate_Order_By>;
  courses_aggregate?: Maybe<Courses_Aggregate_Order_By>;
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  firstName?: Maybe<Order_By>;
  fullName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastActive?: Maybe<Order_By>;
  lastName?: Maybe<Order_By>;
  logins_aggregate?: Maybe<Activity_Logins_Aggregate_Order_By>;
  pagesByCreatedById_aggregate?: Maybe<Pages_Aggregate_Order_By>;
  pages_aggregate?: Maybe<Pages_Aggregate_Order_By>;
  postsByUpdatedById_aggregate?: Maybe<Posts_Aggregate_Order_By>;
  posts_aggregate?: Maybe<Posts_Aggregate_Order_By>;
  profile?: Maybe<Profiles_Order_By>;
  pronouns?: Maybe<Order_By>;
  role?: Maybe<Roles_Order_By>;
  roleId?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  tagsByUpdatedById_aggregate?: Maybe<Tags_Aggregate_Order_By>;
  tags_aggregate?: Maybe<Tags_Aggregate_Order_By>;
  topicsByUpdatedById_aggregate?: Maybe<Topics_Aggregate_Order_By>;
  topics_aggregate?: Maybe<Topics_Aggregate_Order_By>;
  updatedAt?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
  user?: Maybe<Users_Order_By>;
  userByUpdatedById?: Maybe<Users_Order_By>;
  username?: Maybe<Order_By>;
  usersByUpdatedById_aggregate?: Maybe<Users_Aggregate_Order_By>;
  users_aggregate?: Maybe<Users_Aggregate_Order_By>;
  verified?: Maybe<Order_By>;
};

export type Users_Pk_Columns_Input = {
  id: Scalars["Int"];
};

export enum Users_Select_Column {
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Email = "email",
  FirstName = "firstName",
  FullName = "fullName",
  Id = "id",
  LastActive = "lastActive",
  LastName = "lastName",
  Pronouns = "pronouns",
  RoleId = "roleId",
  Status = "status",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
  Username = "username",
  Verified = "verified",
}

export type Users_Set_Input = {
  createdAt?: Maybe<Scalars["timestamptz"]>;
  createdBy?: Maybe<Scalars["Int"]>;
  email?: Maybe<Scalars["String"]>;
  firstName?: Maybe<Scalars["String"]>;
  fullName?: Maybe<Scalars["String"]>;
  id?: Maybe<Scalars["Int"]>;
  lastActive?: Maybe<Scalars["timestamptz"]>;
  lastName?: Maybe<Scalars["String"]>;
  pronouns?: Maybe<Scalars["String"]>;
  roleId?: Maybe<Scalars["Int"]>;
  status?: Maybe<Scalars["String"]>;
  updatedAt?: Maybe<Scalars["timestamptz"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
  username?: Maybe<Scalars["String"]>;
  verified?: Maybe<Scalars["Boolean"]>;
};

export type Users_Stddev_Fields = {
  __typename?: "users_stddev_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  roleId?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Users_Stddev_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Users_Stddev_Pop_Fields = {
  __typename?: "users_stddev_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  roleId?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Users_Stddev_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Users_Stddev_Samp_Fields = {
  __typename?: "users_stddev_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  roleId?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Users_Stddev_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Users_Sum_Fields = {
  __typename?: "users_sum_fields";
  createdBy?: Maybe<Scalars["Int"]>;
  id?: Maybe<Scalars["Int"]>;
  roleId?: Maybe<Scalars["Int"]>;
  updatedBy?: Maybe<Scalars["Int"]>;
};

export type Users_Sum_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export enum Users_Update_Column {
  CreatedAt = "createdAt",
  CreatedBy = "createdBy",
  Email = "email",
  FirstName = "firstName",
  FullName = "fullName",
  Id = "id",
  LastActive = "lastActive",
  LastName = "lastName",
  Pronouns = "pronouns",
  RoleId = "roleId",
  Status = "status",
  UpdatedAt = "updatedAt",
  UpdatedBy = "updatedBy",
  Username = "username",
  Verified = "verified",
}

export type Users_Var_Pop_Fields = {
  __typename?: "users_var_pop_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  roleId?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Users_Var_Pop_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Users_Var_Samp_Fields = {
  __typename?: "users_var_samp_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  roleId?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Users_Var_Samp_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};

export type Users_Variance_Fields = {
  __typename?: "users_variance_fields";
  createdBy?: Maybe<Scalars["Float"]>;
  id?: Maybe<Scalars["Float"]>;
  roleId?: Maybe<Scalars["Float"]>;
  updatedBy?: Maybe<Scalars["Float"]>;
};

export type Users_Variance_Order_By = {
  createdBy?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedBy?: Maybe<Order_By>;
};
